:root{--black:#000;--white:#fff;--border:#fff;--green:#00ff00}
osc.start(); osc.stop(ctx.currentTime + 0.12);
}

// === Safe typewriter ===
function typeWriter(element, text, delay=16){
element.textContent = '';
let i = 0;
(function tick(){
if(i < text.length){
element.textContent += text.charAt(i);
playBeep(220 + (text.charCodeAt(i)%220));
i++; setTimeout(tick, delay);
}
})();
}

function splitAndTypeWriter(element, text, maxLength=160, delay=16){
const words = text.split(' ');
const parts = []; let part = '';
for(const w of words){
if((part + (part?' ':'') + w).length > maxLength){ parts.push(part); part = w; }
else{ part += (part?' ':'') + w; }
}
if(part) parts.push(part);
(async ()=>{
for(const p of parts){
await new Promise(resolve=>{ typeWriter(element, p, delay); setTimeout(resolve, p.length*delay + 20); });
}
})();
}

function pushHistory(role, content){
conversationHistory.push({ role, content });
const MAX = 20; // last 10 turns
if(conversationHistory.length > MAX){
conversationHistory = conversationHistory.slice(-MAX);
}
}

function renderMessage(role, text){
const p = document.createElement('p');
p.className = role;
if(role === 'ai'){
const span = document.createElement('span');
p.appendChild(span);
chatBox.appendChild(p);
splitAndTypeWriter(span, `김건희: ${text}`, 160, 16);
} else {
p.textContent = `YOU: ${text}`;
chatBox.appendChild(p);
}
chatBox.scrollTop = chatBox.scrollHeight;
}

// === Replace with your server proxy later ===
async function sendMessage(userMessage){
// TODO: call your backend /api/chat and return content
return `...${userMessage}에 대한 대답이야.`; // stub
}

sendButton.addEventListener('click', async ()=>{
const message = userInput.value.trim();
if(!message) return;

// render user line
renderMessage('user', message);
userInput.value = '';

// loading
const loading = document.createElement('div');
loading.className='loading';
loading.innerHTML='<span class="dot"></span><span class="dot"></span><span class="dot"></span>';
chatBox.appendChild(loading); chatBox.scrollTop = chatBox.scrollHeight;

try{
const ai = await sendMessage(message);
pushHistory('user', message);
pushHistory('assistant', ai);
loading.remove();
renderMessage('ai', ai);
}catch(e){
loading.remove();
renderMessage('ai', e.message || '오류가 발생했어.');
}
});

window.addEventListener('DOMContentLoaded', ()=>{
// first greet line
const greet = '...왔구나.';
const p = document.createElement('p'); p.className='ai'; const span=document.createElement('span'); p.appendChild(span); chatBox.appendChild(p);
splitAndTypeWriter(span, `김건희: ${greet}`, 160, 16);
userInput.addEventListener('keydown', e=>{ if(e.key==='Enter') sendButton.click(); });
});
